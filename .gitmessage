<type>[optional scope]: <title>

[Task]: <task_id>
<longer description>

[Notes]
<notes>

# build, ci, docs, feat, fix, perf, refactor, style, test - <type>

# fix: a commit of the type fix patches a bug in your codebase 
# (this correlates with PATCH in Semantic Versioning).
# feat: a commit of the type feat introduces a new feature to the codebase 
# (this correlates with MINOR in Semantic Versioning).
# BREAKING CHANGE: a commit that has a footer BREAKING CHANGE:, 
# or appends a ! after the type/scope, introduces a breaking API change 
# (correlating with MAJOR in Semantic Versioning). 
# A BREAKING CHANGE can be part of commits of any type.
# types other than fix: and feat: are allowed, 
# for example @commitlint/config-conventional (based on the Angular convention) 
# recommends build:, chore:, ci:, docs:, style:, refactor:, perf:, test:, and others.